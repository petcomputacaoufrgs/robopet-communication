// Generated by the protocol buffer compiler.  DO NOT EDIT!

#include "messages_robocup_ssl_wrapper.pb.h"
#include <google/protobuf/descriptor.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format_inl.h>

namespace {

const ::google::protobuf::Descriptor* SSL_WrapperPacket_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SSL_WrapperPacket_reflection_ = NULL;

}  // namespace


void protobuf_BuildDesc_messages_5frobocup_5fssl_5fwrapper_2eproto_AssignGlobalDescriptors(const ::google::protobuf::FileDescriptor* file) {
  SSL_WrapperPacket_descriptor_ = file->message_type(0);
  SSL_WrapperPacket::default_instance_ = new SSL_WrapperPacket();
  static const int SSL_WrapperPacket_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSL_WrapperPacket, detection_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSL_WrapperPacket, geometry_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSL_WrapperPacket, refbox_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSL_WrapperPacket, aitogui_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSL_WrapperPacket, aitoradio_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSL_WrapperPacket, aitosim_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSL_WrapperPacket, guitoai_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSL_WrapperPacket, simtotracker_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSL_WrapperPacket, trackertoai_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSL_WrapperPacket, aitotracker_),
  };
  SSL_WrapperPacket_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SSL_WrapperPacket_descriptor_,
      SSL_WrapperPacket::default_instance_,
      SSL_WrapperPacket_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSL_WrapperPacket, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSL_WrapperPacket, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      sizeof(SSL_WrapperPacket));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SSL_WrapperPacket_descriptor_, SSL_WrapperPacket::default_instance_);
  SSL_WrapperPacket::default_instance_->InitAsDefaultInstance();
}

void protobuf_BuildDesc_messages_5frobocup_5fssl_5fwrapper_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;
  ::google::protobuf::DescriptorPool* pool =
    ::google::protobuf::DescriptorPool::internal_generated_pool();

  ::protobuf_BuildDesc_message_5fai_5fto_5fgui_2eproto();
  ::protobuf_BuildDesc_message_5fai_5fto_5fradio_2eproto();
  ::protobuf_BuildDesc_message_5fai_5fto_5fsim_2eproto();
  ::protobuf_BuildDesc_message_5fgui_5fto_5fai_2eproto();
  ::protobuf_BuildDesc_message_5fsim_5fto_5ftracker_2eproto();
  ::protobuf_BuildDesc_messages_5frobocup_5fssl_5fdetection_2eproto();
  ::protobuf_BuildDesc_messages_5frobocup_5fssl_5fgeometry_2eproto();
  ::protobuf_BuildDesc_messages_5frobocup_5fssl_5frefbox_5flog_2eproto();
  ::protobuf_BuildDesc_message_5ftracker_5fto_5fai_2eproto();
  ::protobuf_BuildDesc_message_5fai_5fto_5ftracker_2eproto();
  pool->InternalBuildGeneratedFile(
    "\n\"messages_robocup_ssl_wrapper.proto\032\027me"
    "ssage_ai_to_gui.proto\032\031message_ai_to_rad"
    "io.proto\032\027message_ai_to_sim.proto\032\027messa"
    "ge_gui_to_ai.proto\032\034message_sim_to_track"
    "er.proto\032$messages_robocup_ssl_detection"
    ".proto\032#messages_robocup_ssl_geometry.pr"
    "oto\032%messages_robocup_ssl_refbox_log.pro"
    "to\032\033message_tracker_to_ai.proto\032\033message"
    "_ai_to_tracker.proto\"\330\002\n\021SSL_WrapperPack"
    "et\022&\n\tdetection\030\001 \001(\0132\023.SSL_DetectionFra"
    "me\022#\n\010geometry\030\002 \001(\0132\021.SSL_GeometryData\022"
    "\033\n\006refbox\030\003 \001(\0132\013.Refbox_Log\022\031\n\007aiToGui\030"
    "\004 \001(\0132\010.AIToGUI\022\035\n\taiToRadio\030\005 \001(\0132\n.AIT"
    "oRadio\022\031\n\007aiToSim\030\006 \001(\0132\010.AIToSim\022\031\n\007gui"
    "ToAi\030\007 \001(\0132\010.GUIToAI\022#\n\014simToTracker\030\010 \001"
    "(\0132\r.SimToTracker\022!\n\013trackerToAi\030\t \001(\0132\014"
    ".TrackerToAI\022!\n\013aiToTracker\030\n \001(\0132\014.AITo"
    "Tracker", 687,
  &protobuf_BuildDesc_messages_5frobocup_5fssl_5fwrapper_2eproto_AssignGlobalDescriptors);
}

// Force BuildDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_messages_5frobocup_5fssl_5fwrapper_2eproto {
  StaticDescriptorInitializer_messages_5frobocup_5fssl_5fwrapper_2eproto() {
    protobuf_BuildDesc_messages_5frobocup_5fssl_5fwrapper_2eproto();
  }
} static_descriptor_initializer_messages_5frobocup_5fssl_5fwrapper_2eproto_;


// ===================================================================











SSL_WrapperPacket::SSL_WrapperPacket()
  : ::google::protobuf::Message(),
    _cached_size_(0),
    detection_(NULL),
    geometry_(NULL),
    refbox_(NULL),
    aitogui_(NULL),
    aitoradio_(NULL),
    aitosim_(NULL),
    guitoai_(NULL),
    simtotracker_(NULL),
    trackertoai_(NULL),
    aitotracker_(NULL) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

void SSL_WrapperPacket::InitAsDefaultInstance() {  detection_ = const_cast< ::SSL_DetectionFrame*>(&::SSL_DetectionFrame::default_instance());
  geometry_ = const_cast< ::SSL_GeometryData*>(&::SSL_GeometryData::default_instance());
  refbox_ = const_cast< ::Refbox_Log*>(&::Refbox_Log::default_instance());
  aitogui_ = const_cast< ::AIToGUI*>(&::AIToGUI::default_instance());
  aitoradio_ = const_cast< ::AIToRadio*>(&::AIToRadio::default_instance());
  aitosim_ = const_cast< ::AIToSim*>(&::AIToSim::default_instance());
  guitoai_ = const_cast< ::GUIToAI*>(&::GUIToAI::default_instance());
  simtotracker_ = const_cast< ::SimToTracker*>(&::SimToTracker::default_instance());
  trackertoai_ = const_cast< ::TrackerToAI*>(&::TrackerToAI::default_instance());
  aitotracker_ = const_cast< ::AIToTracker*>(&::AIToTracker::default_instance());
}

SSL_WrapperPacket::SSL_WrapperPacket(const SSL_WrapperPacket& from)
  : ::google::protobuf::Message(),
    _cached_size_(0),
    detection_(NULL),
    geometry_(NULL),
    refbox_(NULL),
    aitogui_(NULL),
    aitoradio_(NULL),
    aitosim_(NULL),
    guitoai_(NULL),
    simtotracker_(NULL),
    trackertoai_(NULL),
    aitotracker_(NULL) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

SSL_WrapperPacket::~SSL_WrapperPacket() {
  if (this != default_instance_) {
    delete detection_;
    delete geometry_;
    delete refbox_;
    delete aitogui_;
    delete aitoradio_;
    delete aitosim_;
    delete guitoai_;
    delete simtotracker_;
    delete trackertoai_;
    delete aitotracker_;
  }
}

const ::google::protobuf::Descriptor* SSL_WrapperPacket::descriptor() {
  if (SSL_WrapperPacket_descriptor_ == NULL) protobuf_BuildDesc_messages_5frobocup_5fssl_5fwrapper_2eproto();
  return SSL_WrapperPacket_descriptor_;
}

const SSL_WrapperPacket& SSL_WrapperPacket::default_instance() {
  if (default_instance_ == NULL) protobuf_BuildDesc_messages_5frobocup_5fssl_5fwrapper_2eproto();
  return *default_instance_;
}

SSL_WrapperPacket* SSL_WrapperPacket::default_instance_ = NULL;

SSL_WrapperPacket* SSL_WrapperPacket::New() const {
  return new SSL_WrapperPacket;
}

const ::google::protobuf::Descriptor* SSL_WrapperPacket::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* SSL_WrapperPacket::GetReflection() const {
  if (SSL_WrapperPacket_reflection_ == NULL) protobuf_BuildDesc_messages_5frobocup_5fssl_5fwrapper_2eproto();
  return SSL_WrapperPacket_reflection_;
}
